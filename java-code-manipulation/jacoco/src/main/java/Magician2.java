import static net.bytebuddy.matcher.ElementMatchers.named;import java.io.File;import java.io.IOException;import net.bytebuddy.ByteBuddy;import net.bytebuddy.dynamic.ClassFileLocator;import net.bytebuddy.implementation.FixedValue;import net.bytebuddy.pool.TypePool;public class Magician2 {    public static void main(String[] args) {        //1. 클래스 파일을 로드하지 않고 클래스 파일을 변경        ClassLoader classLoader = Magician2.class.getClassLoader();        TypePool typePool = TypePool.Default.of(classLoader);        try {            new ByteBuddy()                .redefine(typePool.describe("Hat").resolve(),                    ClassFileLocator.ForClassLoader.of(classLoader))                .method(named("pullOut"))                .intercept(FixedValue.value("Rabbit!!!"))                .make()                .saveIn(new File(                    "/Users/ihyeong-geol/Desktop/workspace/Writing-Down/java-code-manipulation/jacoco/build/classes/java/main/"));        } catch (IOException e) {            e.printStackTrace();        }        //2. 변경된 클래스 파일을 로드 후 실행, Rabbit!!! 반환        System.out.println(new Hat().pullOut());       //Rabbit!!!    }}